name: PR Check (UV Simple)

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  uv-simple-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.4.30"

    - name: Set up Python 3.12
      run: |
        echo "=== Setting up Python 3.12 ==="
        uv python install 3.12
        echo "Python installed, checking version:"
        uv run python --version

    - name: Show project info
      run: |
        echo "=== Project Info ==="
        echo "Working directory: $(pwd)"
        echo "UV version: $(uv --version)"
        echo "Files in directory:"
        ls -la
        echo "pyproject.toml exists?"
        test -f pyproject.toml && echo "✓ pyproject.toml found" || echo "✗ pyproject.toml not found"

    - name: Try basic uv sync
      run: |
        echo "=== Attempting basic uv sync ==="
        uv sync --verbose || echo "uv sync failed - trying alternative approach"

    - name: Test basic uv run
      run: |
        echo "=== Testing basic uv run ==="
        uv run python -c "print('✓ uv run python works')" || echo "uv run python failed"
        uv run python -c "import sys; print('Python path:', sys.path[:3])" || echo "Python path check failed"

    - name: Install minimal dependencies
      run: |
        echo "=== Installing minimal dependencies ==="
        uv add pytest --dev || echo "pytest install failed"
        uv add ruff --dev || echo "ruff install failed"
        echo "=== Checking installed packages ==="
        uv pip list || echo "pip list failed"

    - name: Test Python imports
      run: |
        echo "=== Testing Python imports ==="
        uv run python -c "
        import sys
        import os
        print('✓ Basic imports work')
        print('Working directory:', os.getcwd())
        print('PYTHONPATH from env:', os.environ.get('PYTHONPATH', 'Not set'))
        sys.path.insert(0, '.')
        try:
            import exceptions.exceptions
            print('✓ exceptions.exceptions import successful')
        except Exception as e:
            print(f'✗ exceptions.exceptions import failed: {e}')
        " || echo "Python imports test failed"

    - name: Run basic pytest
      run: |
        echo "=== Running basic pytest ==="
        uv run python -c "
        import unittest
        from unittest.mock import Mock
        
        class TestBasic(unittest.TestCase):
            def test_simple(self):
                self.assertEqual(1+1, 2)
                
            def test_mock(self):
                m = Mock()
                m.return_value = 'test'
                self.assertEqual(m(), 'test')
                
        if __name__ == '__main__':
            unittest.main(verbosity=2)
        " || echo "Basic test failed"

    - name: Summary
      run: |
        echo "=== UV Simple Check Summary ==="
        echo "This workflow tests basic UV functionality"
        echo "Check individual steps above for detailed results"