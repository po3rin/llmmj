name: PR Check (Minimal)

on:
  pull_request:
    branches: [ main, develop ]

env:
  PYTHONPATH: .

jobs:
  syntax-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Check syntax of Python files
      run: |
        echo "=== Checking syntax of all Python files ==="
        python -m py_compile generator/generator.py
        python -m py_compile evaluator/evaluator.py
        python -m py_compile evaluator/libs.py
        python -m py_compile entity/entity.py
        python -m py_compile exceptions/exceptions.py
        echo "=== Checking test files ==="
        python -m py_compile tests/test_generator.py
        python -m py_compile tests/test_evaluator.py
        python -m py_compile tests/test_evaluator_libs.py
        python -m py_compile tests/run_tests.py
        echo "✓ All Python files have valid syntax"

    - name: Check YAML syntax
      run: |
        echo "=== Checking YAML syntax ==="
        python -c "
        import yaml
        files = ['.github/workflows/test.yml', '.github/workflows/pr-check.yml', '.github/workflows/nightly.yml']
        for f in files:
            try:
                with open(f) as file:
                    yaml.safe_load(file)
                print(f'✓ {f}')
            except Exception as e:
                print(f'✗ {f}: {e}')
                exit(1)
        "

  dependency-check:
    runs-on: ubuntu-latest
    needs: syntax-check
    
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python 3.12
      run: uv python install 3.12

    - name: Test dependency installation
      run: |
        echo "=== Testing dependency installation ==="
        uv sync --dev
        echo "=== Checking if key packages are installed ==="
        uv pip list | grep pydantic || echo "pydantic not found"
        uv pip list | grep langchain || echo "langchain not found"
        uv pip list | grep pytest || echo "pytest not found"
        uv pip list | grep ruff || echo "ruff not found"

    - name: Test basic imports
      run: |
        echo "=== Testing basic imports ==="
        uv run python -c "
        try:
            import pydantic
            print('✓ pydantic')
        except:
            print('✗ pydantic failed')
            
        try:
            import entity.entity
            print('✓ entity.entity')
        except Exception as e:
            print(f'✗ entity.entity: {e}')
            
        try:
            import exceptions.exceptions
            print('✓ exceptions.exceptions')
        except Exception as e:
            print(f'✗ exceptions.exceptions: {e}')
        "

  basic-test:
    runs-on: ubuntu-latest
    needs: dependency-check
    
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python 3.12
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --dev

    - name: Run one simple test
      run: |
        echo "=== Running one simple test ==="
        uv run python -c "
        import unittest
        import sys
        sys.path.insert(0, '.')
        
        class SimpleTest(unittest.TestCase):
            def test_basic(self):
                self.assertEqual(1 + 1, 2)
                
        if __name__ == '__main__':
            unittest.main(verbosity=2)
        "