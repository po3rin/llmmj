[project]
name = "llmmj"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
    "anthropic>=0.54.0",
    "evals>=3.0.1.post1",
    "fastapi>=0.115.12",
    "fastapi-mcp>=0.3.4",
    "google-adk>=1.5.0",
    "langchain>=0.3.25",
    "langchain-anthropic>=0.3.15",
    "langchain-community>=0.3.25",
    "langchain-deepseek>=0.1.3",
    "langchain-google-genai>=2.0.10",
    "langchain-mcp>=0.2.1",
    "langchain-mcp-adapters>=0.1.7",
    "langchain-openai>=0.3.23",
    "litellm>=1.73.6",
    "mahjong>=1.3.0",
    "mcp>=1.9.4",
    "openai>=1.86.0",
    "openai-agents[litellm]>=0.1.0",
    "pandas>=2.3.0",
    "python-dotenv>=1.1.0",
    "uvicorn>=0.34.3",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "isort>=6.0.1",
    "pytest>=8.4.0",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-html>=4.1.0",
    "ruff>=0.12.1",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/__pycache__/*",
    ".venv/*",
    "*/venv/*",
    ".tox/*",
    "build/*",
    "dist/*",
    "*.egg-info/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "N805",  # first argument of a method should be named `self`
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["N802", "N803", "N806"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
